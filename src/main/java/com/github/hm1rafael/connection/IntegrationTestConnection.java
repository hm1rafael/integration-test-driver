package com.github.hm1rafael.connection;

import com.github.hm1rafael.statement.IntegrationTestPreparedStatement;

import java.io.File;
import java.sql.*;

public class IntegrationTestConnection extends IntegrationTestConnectionDoesNothingOperations implements Connection {

    public IntegrationTestConnection(File file) {

    }

    @Override
    public Statement createStatement() throws SQLException {
        return new IntegrationTestPreparedStatement(this);
    }

    @Override
    public PreparedStatement prepareStatement(String sql) throws SQLException {
        return new IntegrationTestPreparedStatement(sql, this);
    }

    @Override
    public CallableStatement prepareCall(String sql) throws SQLException {
        return new IntegrationTestPreparedStatement(sql, this);
    }

    @Override
    public Statement createStatement(int resultSetType, int resultSetConcurrency) throws SQLException {
        return new IntegrationTestPreparedStatement(this);
    }

    @Override
    public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency) throws SQLException {
        return new IntegrationTestPreparedStatement(sql, this);
    }

    @Override
    public CallableStatement prepareCall(String sql, int resultSetType, int resultSetConcurrency) throws SQLException {
        return new IntegrationTestPreparedStatement(sql, this);
    }

    @Override
    public Statement createStatement(int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException {
        return new IntegrationTestPreparedStatement(this);
    }

    @Override
    public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException {
        return new IntegrationTestPreparedStatement(sql, this);
    }

    @Override
    public CallableStatement prepareCall(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException {
        return new IntegrationTestPreparedStatement(sql, this);
    }

    @Override
    public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException {
        return new IntegrationTestPreparedStatement(sql, this);
    }

    @Override
    public PreparedStatement prepareStatement(String sql, int[] columnIndexes) throws SQLException {
        return new IntegrationTestPreparedStatement(sql, this);
    }

    @Override
    public PreparedStatement prepareStatement(String sql, String[] columnNames) throws SQLException {
        return new IntegrationTestPreparedStatement(sql, this);
    }

}
