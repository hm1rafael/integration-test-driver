package com.github.hm1rafael.statement;

import java.io.Reader;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.Array;
import java.sql.Blob;
import java.sql.CallableStatement;
import java.sql.Clob;
import java.sql.Connection;
import java.sql.Date;
import java.sql.NClob;
import java.sql.PreparedStatement;
import java.sql.Ref;
import java.sql.ResultSet;
import java.sql.RowId;
import java.sql.SQLException;
import java.sql.SQLXML;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.Calendar;
import java.util.Map;

import com.github.hm1rafael.connection.IntegrationTestConnection;

public class IntegrationTestPreparedStatement extends IntegrationTestPreparedStatementDoesNothingOperations implements PreparedStatement, CallableStatement {

	private IntegrationTestConnection connection;
	private String sql;
	
	public IntegrationTestPreparedStatement(IntegrationTestConnection connection) {
		this.connection = connection;
	}
	
	public IntegrationTestPreparedStatement(String sql, IntegrationTestConnection connection) {
		this(connection);
		this.sql = sql;
	}
	
	@Override
	public ResultSet executeQuery(String sql) throws SQLException {
		return null;
	}

	@Override
	public int executeUpdate(String sql) throws SQLException {
		return 0;
	}

	@Override
	public boolean execute(String sql) throws SQLException {
		return false;
	}

	@Override
	public ResultSet getResultSet() throws SQLException {
		return null;
	}

	@Override
	public int[] executeBatch() throws SQLException {
		return null;
	}

	@Override
	public Connection getConnection() throws SQLException {
		return null;
	}

	@Override
	public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
		return 0;
	}

	@Override
	public int executeUpdate(String sql, int[] columnIndexes) throws SQLException {
		return 0;
	}

	@Override
	public int executeUpdate(String sql, String[] columnNames) throws SQLException {
		return 0;
	}

	@Override
	public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
		return false;
	}

	@Override
	public boolean execute(String sql, int[] columnIndexes) throws SQLException {
		return false;
	}

	@Override
	public boolean execute(String sql, String[] columnNames) throws SQLException {
		return false;
	}

	@Override
	public ResultSet executeQuery() throws SQLException {
		return null;
	}

	@Override
	public int executeUpdate() throws SQLException {
		return 0;
	}

	@Override
	public boolean execute() throws SQLException {
		return false;
	}

	@Override
	public String getString(int parameterIndex) throws SQLException {
		return null;
	}

	@Override
	public boolean getBoolean(int parameterIndex) throws SQLException {
		
		return false;
	}

	@Override
	public byte getByte(int parameterIndex) throws SQLException {
		
		return 0;
	}

	@Override
	public short getShort(int parameterIndex) throws SQLException {
		
		return 0;
	}

	@Override
	public int getInt(int parameterIndex) throws SQLException {
		
		return 0;
	}

	@Override
	public long getLong(int parameterIndex) throws SQLException {
		
		return 0;
	}

	@Override
	public float getFloat(int parameterIndex) throws SQLException {
		
		return 0;
	}

	@Override
	public double getDouble(int parameterIndex) throws SQLException {
		
		return 0;
	}

	@Override
	public BigDecimal getBigDecimal(int parameterIndex, int scale) throws SQLException {
		
		return null;
	}

	@Override
	public byte[] getBytes(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public Date getDate(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public Time getTime(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public Timestamp getTimestamp(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public Object getObject(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public BigDecimal getBigDecimal(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public Object getObject(int parameterIndex, Map<String, Class<?>> map) throws SQLException {
		
		return null;
	}

	@Override
	public Ref getRef(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public Blob getBlob(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public Clob getClob(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public Array getArray(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public Date getDate(int parameterIndex, Calendar cal) throws SQLException {
		
		return null;
	}

	@Override
	public Time getTime(int parameterIndex, Calendar cal) throws SQLException {
		
		return null;
	}

	@Override
	public Timestamp getTimestamp(int parameterIndex, Calendar cal) throws SQLException {
		
		return null;
	}

	@Override
	public void registerOutParameter(int parameterIndex, int sqlType, String typeName) throws SQLException {
		
		
	}

	@Override
	public void registerOutParameter(String parameterName, int sqlType) throws SQLException {
		
		
	}

	@Override
	public void registerOutParameter(String parameterName, int sqlType, int scale) throws SQLException {
		
		
	}

	@Override
	public URL getURL(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public String getString(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public boolean getBoolean(String parameterName) throws SQLException {
		
		return false;
	}

	@Override
	public byte getByte(String parameterName) throws SQLException {
		
		return 0;
	}

	@Override
	public short getShort(String parameterName) throws SQLException {
		
		return 0;
	}

	@Override
	public int getInt(String parameterName) throws SQLException {
		
		return 0;
	}

	@Override
	public long getLong(String parameterName) throws SQLException {
		
		return 0;
	}

	@Override
	public float getFloat(String parameterName) throws SQLException {
		
		return 0;
	}

	@Override
	public double getDouble(String parameterName) throws SQLException {
		
		return 0;
	}

	@Override
	public byte[] getBytes(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public Date getDate(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public Time getTime(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public Timestamp getTimestamp(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public Object getObject(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public BigDecimal getBigDecimal(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public Object getObject(String parameterName, Map<String, Class<?>> map) throws SQLException {
		
		return null;
	}

	@Override
	public Ref getRef(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public Blob getBlob(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public Clob getClob(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public Array getArray(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public Date getDate(String parameterName, Calendar cal) throws SQLException {
		
		return null;
	}

	@Override
	public Time getTime(String parameterName, Calendar cal) throws SQLException {
		
		return null;
	}

	@Override
	public Timestamp getTimestamp(String parameterName, Calendar cal) throws SQLException {
		
		return null;
	}

	@Override
	public URL getURL(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public RowId getRowId(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public RowId getRowId(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public NClob getNClob(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public NClob getNClob(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public SQLXML getSQLXML(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public String getNString(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public String getNString(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public Reader getNCharacterStream(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public Reader getNCharacterStream(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public Reader getCharacterStream(int parameterIndex) throws SQLException {
		
		return null;
	}

	@Override
	public Reader getCharacterStream(String parameterName) throws SQLException {
		
		return null;
	}

	@Override
	public <T> T getObject(int parameterIndex, Class<T> type) throws SQLException {
		
		return null;
	}

	@Override
	public <T> T getObject(String parameterName, Class<T> type) throws SQLException {
		
		return null;
	}

}
